/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "se.thinkcode.cucumber-runner" version "0.0.11"
}

group = 'org.bedu.java.testing.interviewer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testImplementation('io.cucumber:cucumber-java:7.13.0') {
        because("we want to use Cucumber JVM")
    }
    testImplementation('io.cucumber:cucumber-junit-platform-engine:7.11.1') {
        because("we want to use Cucumber with JUnit 5")
    }
    testImplementation('org.junit.platform:junit-platform-suite:1.9.2') {
        because("we want to use the JUnit 5 @Suite annotation to select/run Cucumber tests")
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2') {
        because("we want to use JUnit 5 assertions")
    }
    testImplementation 'io.cucumber:cucumber-junit:7.13.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.bedu.java.testing.interviewer.Menu'
}

run {
    standardInput = System.in
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    // OPTIONAL: Enable parallel test execution
    systemProperty('junit.jupiter.execution.parallel.enabled', 'false')
    // OPTIONAL: Improve readability of test names in reports
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
}

test {
    minHeapSize = "128m" // initial heap size
    maxHeapSize = "512m" // maximum heap size

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped"]
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }

    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }

    afterTest { descriptor, result ->
        def totalTime = result.endTime - result.startTime
        println "Total time of $descriptor.name was $totalTime"
    }
}

cucumber {
    glue = "classpath:org.bedu.java.testing.interviewer.stepdefinitions"
    main = "io.cucumber.core.cli.Main"
}

